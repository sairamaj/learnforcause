@using SelfService.Shared
@using System.Linq
@inject HttpClient Http
@inject NavigationManager NavigationManager

@using SelfService.Shared

<MatButton Raised="true" OnClick="@Refresh" style="float: right">Refresh</MatButton>
<br/>
<br/>
@if( error != null){
    <span>@error</span>
}
@if (students == null){
    <em>Loading Students...</em>
}
else{
        <MatAccordion Multi="true">
            @foreach(var student in students){
                <MatExpansionPanel>
                    <MatExpansionPanelSummary>
                        <MatExpansionPanelHeader>@student.Name</MatExpansionPanelHeader>
                    </MatExpansionPanelSummary>
                    <MatExpansionPanelDetails>
                        <ProfileView Profile="@student.Profile" />
                    </MatExpansionPanelDetails>
                </MatExpansionPanel>            
            }         
        </MatAccordion>
}

@code {
    IEnumerable<SelfService.Shared.Student> students;
    AddStudentPoints addStudentPoints = new AddStudentPoints();

    string error = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await Refresh();
        }
        catch (Microsoft.AspNetCore.Components.WebAssembly.Authentication.AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }

    }

    async Task Refresh()
    {
        try
        {
            students = (await Http.GetFromJsonAsync<IEnumerable<SelfService.Shared.Student>>("admin/students"))
                .OrderBy(s => s.Name);
        }
        catch (System.Exception e)
        {
            error = e.Message;
        }
    }

    void AddPointsToStudent(string id)
    {
        NavigationManager.NavigateTo($"addstudentpoints/{id}");
    }

}