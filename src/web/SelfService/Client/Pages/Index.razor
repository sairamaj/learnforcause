@page "/"

@using SelfService.Shared
@using System.Linq
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject HttpClient Http

@if( currentRunningClass != null){
    if( currentAttendance == null){
        <MatButton Raised="true" OnClick="@AddAttendance" style="float: right">Add Attendance</MatButton>
        <br/>
        <br/>
    }else{
        <b><span style="float: right">Attending @currentRunningClass.ClassName @currentAttendance.DateTime</span></b>
    }
}

<ResourceViewComponent ResourceName="homepage" />        


@code{
    CurrentRunningClassInfo currentRunningClass;
    StudentAttendance currentAttendance;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            currentRunningClass = await Http.GetFromJsonAsync<CurrentRunningClassInfo>("program/class/current");
            if (currentRunningClass != null)
            {
                try
                {
                    currentAttendance = await Http.GetFromJsonAsync<StudentAttendance>($"student/class/{currentRunningClass.Id}");
                }
                catch (Exception)
                {
                    // Ignore for now.
                }
            }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }

    private async Task AddAttendance()
    {
        await Http.PostAsync($"student/class/{currentRunningClass.Id}", new StringContent(string.Empty));
        currentAttendance = await Http.GetFromJsonAsync<StudentAttendance>($"student/class/{currentRunningClass.Id}");
    }


}